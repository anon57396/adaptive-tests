name: Validation
permissions:
  contents: read

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  validate:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x, 18.x, 20.x]

    steps:
    - uses: actions/checkout@v3

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v5
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Lint Markdown
      if: matrix.node-version == '20.x'
      run: npm run lint:markdown

    - name: Check documentation links
      if: matrix.node-version == '20.x'
      run: npm run lint:links

    - name: Run validation suite
      run: npm run validate

    - name: Verify adaptive tests survive refactoring
      run: |
        npm run restore
        npm run test:adaptive
        npm run refactor
        npm run test:adaptive

    - name: Verify adaptive tests catch real bugs
      run: |
        npm run restore
        npm run demo:broken
        npm run test:adaptive || echo "âœ… Correctly failed on broken implementation"
        npm run restore:broken

    - name: Generate coverage report
      if: matrix.node-version == '20.x'
      run: npm run test:coverage

    - name: Upload coverage reports to Codecov
      if: matrix.node-version == '20.x'
      uses: codecov/codecov-action@v5
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        slug: anon57396/adaptive-tests
        files: ./coverage/lcov.info
        flags: unittests
        fail_ci_if_error: false
        verbose: true
